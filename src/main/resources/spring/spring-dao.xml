<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 配置整合mybatis过程 -->
	<!-- 1.配置数据库相关参数properties的属性：${url} -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 2.数据库连接池 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc_url}"/>
		<property name="username" value="${jdbc_username}"/>
		<property name="password" value="${jdbc_password}"/>
		<property name="driverClassName" value="${driverClassName}"/>

		<!-- 初始化连接大小 -->
		<property name="initialSize" value="5"/>
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="10"/>
		<!-- 连接池最大空闲(该方法已过时，用maxActive和minIdle来表示数据库连接池的maxPoolSize和minPoolSize) -->
		<!--<property name="maxIdle" value="20"/>-->
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="3"/>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="10000"/>

		<!--<property name="validationQuery" value="${validationQuery}"/>-->
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>
		<property name="testWhileIdle" value="true"/>

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000"/>

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true"/>
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800"/>
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true"/>

		<!-- 监控数据库 -->
		<property name="filters" value="mergeStat"/>
	</bean>


	<!-- 3.配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 自动扫描Mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:mybatis/*/*.xml"/>
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
		<property name="typeAliasesPackage" value="com.frsp.entity"/>
		<!--<property name="typeEnumsPackage" value="com.baomidou.springmvc.model.enums"/>-->
		<property name="plugins">
			<array>
                <!--分页插件配置-->
				<bean id="paginationInterceptor" class="com.baomidou.mybatisplus.plugins.PaginationInterceptor">
					<property name="dialectType" value="mysql"/>
                    <property name="localPage" value="true" />
				</bean>
			</array>
		</property>
		<!-- 全局配置注入 -->
		<property name="globalConfig" ref="globalConfig" />
	</bean>
	<bean id="globalConfig" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
		<!--
            AUTO->`0`("数据库ID自增")
             INPUT->`1`(用户输入ID")
            ID_WORKER->`2`("全局唯一ID")
            UUID->`3`("全局唯一ID")
        -->
		<property name="idType" value="0" />
		<!--
            MYSQL->`mysql`
            ORACLE->`oracle`
            DB2->`db2`
            H2->`h2`
            HSQL->`hsql`
            SQLITE->`sqlite`
            POSTGRE->`postgresql`
            SQLSERVER2005->`sqlserver2005`
            SQLSERVER->`sqlserver`
        -->
		<!-- Oracle需要添加该项 -->
		<property name="dbType" value="oracle" />
		<!-- 全局表为下划线命名设置 true -->
		<property name="dbColumnUnderline" value="true" />
		<property name="capitalMode" value="true"/>
		<property name="logicDeleteValue" value="1" />
		<property name="logicNotDeleteValue" value="0" />
        <property name="sqlInjector" ref="logicSqlInjector"/>
	</bean>

    <bean id="logicSqlInjector" class="com.baomidou.mybatisplus.mapper.LogicSqlInjector" />

	<!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory,单个数据源可以不配置 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="com.frsp.mapper" />
	</bean>
</beans>